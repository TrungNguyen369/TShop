@model IEnumerable<TShop.ViewModels.WishItem>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Wishlist Start -->
<div class="cart-page">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Add to Cart</th>
                                <th>Remove</th>
                            </tr>
                        </thead>
                        <tbody class="align-middle">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td><a asp-controller="Product" asp-action="ProductDetail"><img src="~/image/@item.image" alt="Image"></a></td>
                                    <td><a asp-controller="Product" asp-action="ProductDetail" data-product-id="@item.Id">@item.Name</a></td>
                                    <td>$@item.Price</td>
                                    <td>
                                        <div class="qty">
                                            <button class="btn-minus"><i class="fa fa-minus"></i></button>
                                            <input id="quantityInput" type="text" value="@item.Quantity">
                                            <button class="btn-plus"><i class="fa fa-plus"></i></button>
                                        </div>
                                    </td>
                                    <td><button class="btn-addToCart">Add to Cart</button></td>
                                    <td><button class="btn-remove"><i class="fa fa-trash"></i></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Wishlist End -->
@section Scripts
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const minusButtons = document.querySelectorAll(".btn-minus");
            const plusButtons = document.querySelectorAll(".btn-plus");
            const removeButtons = document.querySelectorAll(".btn-remove");
            const addToCartButtons = document.querySelectorAll(".btn-addToCart");

            addToCartButtons.forEach(btn => {
                btn.addEventListener("click", function () {
                    updateBtnClick(btn);
                });
            });

            removeButtons.forEach(btn => {
                btn.addEventListener("click", function () {
                    updateBtnClick(btn);
                });
            });

            minusButtons.forEach(btn => {
                btn.addEventListener("click", function () {
                    updateBtnClick(btn);
                });
            });

            plusButtons.forEach(btn => {
                btn.addEventListener("click", function () {
                    updateBtnClick(btn);
                });
            });

            function updateBtnClick(btn) {
                var productId;
                document.querySelectorAll('a[data-product-id]').forEach(link => {
                    productId = link.getAttribute('data-product-id');
                });
                console.log('Product id:', productId);

                // Check if btn has class .btn-plus
                if (btn.classList.contains('btn-plus')) {
                    console.log('Clicked the Add button');

                    // Send Ajax request
                    sendData('AddWishList', productId);
                }
                // Check if btn has class .btn-minus
                else if (btn.classList.contains('btn-minus')) {
                    console.log('Clicked the Minus button');

                    // Send Ajax request
                    sendData('ReduceWishList', productId);
                }
                // Check if btn has class .btn-remove
                else if (btn.classList.contains('btn-remove')) {
                    console.log('Clicked the Remove button');

                    // Send Ajax request
                    sendData('RemoveWishList', productId);

                    // Redirect to index page after success
                    window.location.href = '@Url.Action("Index", "WishList")';
                }
                // Check if btn has class .btn-addToCart
                else if (btn.classList.contains('btn-addToCart')) {
                    console.log('Clicked the addToCart button');

                    //Get quantity
                    var inputElement = document.getElementById('quantityInput');
                    var quantity = parseInt(inputElement.value);
                    console.log('Clicked the addToCart button ' + quantity);

                    // Send Ajax request
                    sendData('AddCart', productId, quantity, 'Cart');

                    // Redirect to index page after success
                    window.location.href = '@Url.Action("Index", "Cart")';
                }
            }

            function sendData(action, productId, quantity = null, controller = 'WishList') {
                // Send Ajax request for update
                var xhr = new XMLHttpRequest();
                xhr.open('POST', `/${controller}/${action}`, true);
                xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
                        // Process results from the server (if necessary)
                        console.log('Data updated successfully!');
                    }
                };
                xhr.send(JSON.stringify({ Id: productId, Quantity: 1 }));
            }
        });
    </script>
}